#
# MIT license
#
#
# Copyright (c) 2018 Advanced Micro Devices, Inc. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

amf_root = ../../../..

include $(amf_root)/public/make/common_defs.mak

target_name = DVR
target_type = exe

project_root = public/samples/CPPSamples/DVR

pp_include_dirs = \
    $(amf_root) \
    $(VULKAN_SDK)/include \
    $(build_dir) \

cxx_flags += $(shell pkg-config --cflags libpulse-simple gtk+-3.0 libdrm)
linker_libs += pulse pulse-simple gtk-3 gio-2.0 gobject-2.0 glib-2.0 drm

src_files = \
    $(project_root)/DVRLinux.cpp \
    $(public_common_dir)/AMFFactory.cpp \
    $(public_common_dir)/AMFSTL.cpp \
    $(public_common_dir)/CurrentTimeImpl.cpp \
    $(public_common_dir)/Thread.cpp \
    $(public_common_dir)/TraceAdapter.cpp \
    $(public_common_dir)/PropertyStorageExImpl.cpp \
    $(public_common_dir)/VulkanImportTable.cpp \
    $(public_common_dir)/OpenGLImportTable.cpp \
    $(public_common_dir)/Linux/ThreadLinux.cpp \
    $(public_common_dir)/Linux/PulseAudioImportTable.cpp \
    $(public_common_dir)/Linux/DRMDevice.cpp \
    $(samples_common_dir)/CmdLogger.cpp \
    $(samples_common_dir)/CmdLineParser.cpp \
    $(samples_common_dir)/ParametersStorage.cpp \
    $(samples_common_dir)/Pipeline.cpp \
    $(samples_common_dir)/DisplayDvrPipeline.cpp \
    $(samples_common_dir)/DeviceVulkan.cpp \
    $(samples_common_dir)/EncoderParamsAVC.cpp \
    public/src/components/AudioCapture/AudioCaptureImpl.cpp \
    public/src/components/AudioCapture/PulseAudioSimpleAPISource.cpp \
    public/src/components/AudioCapture/PulseAudioSimpleAPISourceFacade.cpp \

include $(amf_root)/public/make/common_rules.mak

# build the xml+glade UI into the resources.c file
$(build_dir)/$(project_root)/resources.c : resources.xml DVR.glade
	glib-compile-resources --target=$@ resources.xml --generate-source

$(build_dir)/$(project_root)/resources.o : $(build_dir)/$(project_root)/resources.c
	$(MKDIR) $(dir $@)
	$(CC) $(shell pkg-config --cflags gtk+-3.0) -c $< -o $@

$(exe_target_file) : $(build_dir)/$(project_root)/resources.o